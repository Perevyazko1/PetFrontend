{"version":3,"file":"static/js/164.7cd877da.chunk.js","mappings":"6NAYMA,GAAWC,EAAAA,EAAAA,OAAK,SAACC,GAKfA,EAHAC,UADJ,IAEIC,EAEAF,EAFAE,SACGC,GAAUC,EAAAA,EAAAA,GACbJ,EAAKK,GAEHC,GAAWC,EAAAA,EAAAA,MAEjBC,EAAAA,EAAAA,YAAU,WACNC,YAAW,WACPH,EAASI,EAAAA,GAAgBC,SAAS,CAC9B,CACIC,GAAI,EACJC,WAAY,uCACZC,UAAW,yDACXC,MAAO,cACPC,SAAU,aACVC,SAAU,YAGtB,GAAG,IACP,GAAG,IAGH,IAAMC,GAAWC,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,SAASC,IAAI,IACtDC,GAAYJ,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,SAASG,aAAa,IAGtE,OACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAAAxB,UACTyB,EAAAA,EAAAA,MAAA,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACI3B,WAAW4B,EAAAA,EAAAA,GAAW,KAClB1B,GAAU,IAAAD,SAAA,EAEduB,EAAAA,EAAAA,KAAA,MAAAvB,SAAI,oFACHqB,GAEGE,EAAAA,EAAAA,KAAAK,EAAAA,SAAA,CAAA5B,SAAE,cAEFuB,EAAAA,EAAAA,KAAAK,EAAAA,SAAA,CAAA5B,SAEgB,OAARgB,QAAQ,IAARA,OAAQ,EAARA,EAAUa,KAAI,SAACT,GAAI,OACfG,EAAAA,EAAAA,KAAA,OAAAvB,SACKoB,EAAKT,YADAS,EAAKV,GAET,MAKrBV,OAIjB,IACA,W,4FC/DaK,EAAoCyB,EAAAA,YACpCb,EAAkDc,EAAAA,W","sources":["pages/UserPage/ui/UserPage.tsx","shared/lib/hook/reduxHooks/reduxHooks.tsx"],"sourcesContent":["import {memo, ReactNode, useEffect} from 'react';\nimport {classNames} from \"shared/lib/classNames/classNames\";\nimport {useAppDispatch, useAppSelector} from \"shared/lib/hook/reduxHooks/reduxHooks\";\nimport {userPageActions} from \"../model/slice/userPageSlice\";\nimport {QueryContext} from \"features/QueryContext/QueryContext\";\n\ninterface UserPageProps {\n    className?: string\n    children?: ReactNode\n}\n\n\nconst UserPage = memo((props: UserPageProps) => {\n    const {\n        className,\n        children,\n        ...otherProps\n    } = props\n\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        setTimeout(() => {\n            dispatch(userPageActions.setUsers([\n                {\n                    id: 1,\n                    first_name: \"Андрей\",\n                    last_name: \"Перевязко\",\n                    email: \"123@mail.ru\",\n                    username: \"perevyazko\",\n                    password: \"123456\"\n                }\n            ]))\n        }, 1000)\n    }, [])\n// TODO удалить задержку загрузки в прод\n\n    const userList = useAppSelector(state => state.userPage.user);\n    const isLoading = useAppSelector(state => state.userPage.pageIsLoading);\n\n\n    return (\n        <QueryContext>\n            <div\n                className={classNames('')}\n                {...otherProps}\n            >\n                <h1>Личный кабинет</h1>\n                {isLoading\n                    ?\n                    <>Skeleton</>\n                    :\n                    <>\n                        {\n                            userList?.map((user) => (\n                                <div key={user.id}>\n                                    {user.first_name}\n                                </div>\n                            ))\n                        }\n                    </>\n                }\n                {children}\n            </div>\n        </QueryContext>\n    );\n});\nexport default UserPage","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from 'app/providers/storeProvider/store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;"],"names":["UserPage","memo","props","className","children","otherProps","_objectWithoutProperties","_excluded","dispatch","useAppDispatch","useEffect","setTimeout","userPageActions","setUsers","id","first_name","last_name","email","username","password","userList","useAppSelector","state","userPage","user","isLoading","pageIsLoading","_jsx","QueryContext","_jsxs","_objectSpread","classNames","_Fragment","map","useDispatch","useSelector"],"sourceRoot":""}